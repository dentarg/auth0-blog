---
layout: post
title: "ng-conf 2016 Summary - Day Three"
description: "The final day of ng-conf focused on reactive programming, Firebase and much more. Check out our summary of ng-conf day three. "
date: 2016-05-07 08:30
alias: /2016/05/07/ng-conf-summary-day-3/
category: Technical Guide, Conferences, Angular
author: 
  name: "Ado Kukic"
  url: "https://twitter.com/kukicadnan"
  mail: "ado@auth0.com"
  avatar: "https://s.gravatar.com/avatar/99c4080f412ccf46b9b564db7f482907?s=200"
design: 
  bg_color: "#000000"
  image: "https://cdn.auth0.com/blog/ngconf2016/ng-conf-logo.png"
tags: 
- Angular
- Angular-2
- angular
- ng-conf
- Angular-Universal
- Angular-Mobile-Toolkit
- Angular-CLI
---

Day three of ng-conf consisted of a single track of talks. The topics covered today included reactive programming, Firebase, Angular 2 form validation and animations amongst others. The question on everyones mind at the end of day three was **"When will Angular 2 be released?"** and we still don't have a definite date. One thing we do know for sure is that the Angular 2 offline compiler is one of the key missing pieces, so as soon as it lands, we'll know the release is imminent.

{% include tweet_quote.html quote_text="One of the key missing pieces to the final release of Angular 2.0 is the offline compiler." %}

If you missed our previous recaps of ng-conf, you can check out the big announcements from [day one](https://auth0.com/blog/2016/05/05/ng-conf-summary-day-1/) and [day two](https://auth0.com/blog/2016/05/06/ng-conf-summary-day-2/).

## Reactive Programming

Angular 2 has fully embraced [reactive programming](https://en.wikipedia.org/wiki/Reactive_programming) patterns. The [**ngrx**](https://github.com/ngrx) GitHub group has already released a number of libraries that enable Angular 2 components to implement reactive functionality. These include the [ngrx/store](https://github.com/ngrx/store), [ngrx/router](https://github.com/ngrx/router), [ngrx/db](https://github.com/ngrx/db) and [ngrx/devtools](https://github.com/ngrx/devtools), with more libraries to come.

## AngularFire 2 Enters Beta

If you've worked with Angular and Firebase, there's a good probability you've interfaced with the [AngularFire](https://www.firebase.com/docs/web/libraries/angular/) library. [AngularFire 2](https://github.com/angular/angularfire2) provides an easy to use API for interfacing with Firebase with your Angular 2 applications. Firebase is a real-time database that allows automatic syncing across all connected devices. It was announced that as of today, AngularFire 2 is available to download and use in a public beta state.

## Angular 2 Form Validation

We took a deep-dive into the different ways to create and validate forms and user input with Angular 2. Developers can choose to implement forms via a **template driven** or **model driven** architecture. Template driven allows the developer to define the form in the actual view layer, while model driven forms are defined programmatically and generated by Angular 2 itself.

## Codelyzer

Codelyzer will save Angular 2 developers a ton of time when building applications. Codelyzer examines the developer defined rules and requirements that are set up via JS or TS lint files as well as the Angular 2 style guide, and when the standards are not adhered to, Codelyzer will complain and let the developer know of the rules they are violating. Codelyzer is also built into the Angular CLI and can be used starting today.

## Animations

There are many ways to handle animations on the web. You can do pure CSS animations, JavaScript animations or a mix of the two. The Angular team is aiming at making animations simpler but more powerful with Angular 2. Within Angular 2 components, developers will be able to define and implement different types of animations. This abstraction will allow for a greater increase over control as well as performance, which will be a great benefit, as traditionally animations on the web have been difficult to implement properly.

## Angular CLI

Angular CLI solves the problem of diving into Angular 2 app development. Where in the past, you would have a lot of manual configuration and setup, with the CLI, scaffolding and starting an application can be done in as little as three terminal commands:

```bash
ng new PROJECT_NAME
cd PROJECT_NAME
ng serve
```

The Angular CLI will simplify many tasks including: project scaffolding, creating of new services and components, running linting and other tasks as well as handling build and deploy of Angular 2 applications. You can get started with the Angular CLI by running the `npm install -g angular-cli` command from a terminal window. *NodeJS and npm are required.*

## Conclusion

The conference may have ended but the Angular 2 journey has just begun. With the release candidate out in the wild, developers can finally start developing Angular 2 applications with a certain level of confidence that the API will not change drastically before the final 2.0 release. Brad Green, the managing director of the Angular project, has stated in the Q&A panel that he believes that Angular 2 is production ready and references several use cases where Angular 2 is already used in production including Google AdWords, Capital One and the Weather Channel.

Now is the right time to jump into Angular 2 development. If you are already developing an Angular 2 app or are just getting started, chances are you will need an authentication system and Auth0 has you covered. Check out our [Angular 2 JWT](https://github.com/auth0/angular2-jwt) helper library that works with both Auth0 and any other implementation of JSON Web Token (JWT) authentication. To quickly get started, <a href="https://auth0.com/signup" data-amp-replace="CLIENT_ID" data-amp-addparams="anonId=CLIENT_ID(cid-scope-cookie-fallback-name)">sign up</a> for a free Auth0 account and get user authentication setup with your Angular 2 app in minutes.